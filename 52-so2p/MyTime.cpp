#include "MyTime.h"


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//#######################################################################################################################
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MyTimer::MyTimer()
{
    update();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//#######################################################################################################################
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool MyTimer::isTimeExp(int m_iMilliSecs)
{
    std::chrono::steady_clock::time_point m_timer = std::chrono::steady_clock::now(); //pobranie aktualnego czasu
    float m_timeDelay=(std::chrono::duration_cast<std::chrono::milliseconds>(m_timer - c_lastTm).count()); //policzenie czasu jaki uplynal

    return m_timeDelay>=m_iMilliSecs;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//#######################################################################################################################
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
float MyTimer::timeElapsed()
{

    std::chrono::steady_clock::time_point m_timer = std::chrono::steady_clock::now(); //pobranie aktualnego czasu
    float m_timeDelay=(std::chrono::duration_cast<std::chrono::milliseconds>(m_timer - c_lastTm).count()); //policzenie czasu jaki uplynal

    return m_timeDelay;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//#######################################################################################################################
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void MyTimer::update()
{
    //pobranie aktualnego czasu
    c_lastTm = std::chrono::steady_clock::now();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//#######################################################################################################################
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
